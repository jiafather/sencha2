/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MyController', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            daumPanel: '#daumPanel',
            backBtn: '#backBtn',
            daumTb: '#daumTb',
            daumPreviewPanel: '#daumPreviewPanel'
        },

        control: {
            "#searchBtn": {
                tap: 'onButtonTap'
            },
            "#daumList": {
                itemtap: 'onListItemTap'
            },
            "button": {
                tap: 'onButtonTap1'
            }
        }
    },

    onButtonTap: function(button, e, eOpts) {
        var queryMsg = Ext.getCmp('searchTf').getValue();
        if(!queryMsg){
            Ext.Msg.alert('경고', '검색어를 입력하세요');
            return;
        }
        var store = Ext.getStore('daumStore');
        store.removeAll();
        store.getProxy().setExtraParam("q", queryMsg);
        store.load({

            scope : this,
            params : {
                q : queryMsg,
                apikey : 'DAUM_SEARCH_DEMO_APIKEY',
                output : 'json',
                result : 20,
                pageno : 1
            }
        });
    },

    onListItemTap: function(dataview, index, target, record, e, eOpts) {
        this.getDaumPanel().animateActiveItem(1, {
            type :'slide', direction:'left'
        });
        this.getBackBtn().show();
        this.getDaumTb().setTitle('상세내용');
        this.getDaumPreviewPanel().setData(record.data);
    },

    onButtonTap1: function(button, e, eOpts) {
        this.getDaumPanel().animateActiveItem(0, {
            type :'slide', direction:'right'
        });
        this.getBackBtn().hide();
        this.getDaumTb().setTitle('리스트');
        //this.getDaumPreviewPanel().setData(record.data);
    }

});